// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserProfile {
  id             String @id @default(uuid())
  userId         String
  image          String
  dateOfBirth    String
  educationId    String
  maritualStatus String
  about          String
  nationality    String
  location       String
}

model Education {
  educationId   String   @id @default(uuid())
  title         String
  instituteName String
  startDate     DateTime
  endDate       DateTime
  cgpa          Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model SocialPlatform {
  platfromId String   @id @default(uuid())
  name       String
  image      String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model PlatformConnection {
  connectionId String   @id @default(uuid())
  platformId   String
  link         String
  userId       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Experience {
  experienceId String   @id @default(uuid())
  companyName  String
  designation  String
  startYear    DateTime
  present      String
  endYear      DateTime
  userId       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Project {
  projectId   String   @id @default(uuid())
  designation String
  projectLink String
  image       String
  description String
  startYear   DateTime
  endYear     DateTime
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Category {
  categoryId String   @id @default(uuid())
  name       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model CategoryConnection {
  connectionId String   @id @default(uuid())
  categoryId   String
  serviceId    String
  projectId    String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model SubCategory {
  subCategoryId String   @id @default(uuid())
  name          String
  categoryId    String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Service {
  serviceId   String   @id @default(uuid())
  title       String
  description String
  image       String
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Skills {
  skillsId  String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SkillConnection {
  skillConnectionId String   @id @default(uuid())
  skillId           String
  userId            String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

// company
model Page {
  pageId      String   @id @default(uuid())
  userId      String
  logo        String
  coverPic    String
  name        String
  userName    String
  bio         String
  description String
  locationId  String
  address     String
  categoryId  String
  contactNo   String
  email       String   @unique
  follower    String
  websiteURL  String
  foundedDate DateTime
}

model JobPost {
  postId         String   @id @default(uuid())
  pageId         String
  title          String
  salary         Int
  description    String
  responsibility String
  requirements   String
  vacancy        String
  deadline       DateTime
  categoryId     String
  extraInfo      String
}

model Blog {
  blogId      String   @id @default(uuid())
  title       String
  description String
  image       String
  pageId      String
  upVote      String
  downVote    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Location {
  locationId String @id @default(uuid())
  country    String
  division   String
  district   String
}

model Member {
  memberId    String   @id @default(uuid())
  email       String   @unique
  joiningDate DateTime
  role        String
  pageId      String
}
